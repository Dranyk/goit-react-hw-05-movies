{"version":3,"file":"static/js/568.1d4ad69a.chunk.js","mappings":"mOA+BA,EA5BkB,SAAC,GAA8B,IAA5BA,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAG3B,OACE,+BACE,wBACGD,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMN,GAA1C,UAEE,wBAAKG,OAHAD,EADC,OAWnB,EChBc,SAASK,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJR,EAAUQ,EACX,IACAC,OAAM,SAAAR,GACLC,EAAS,kCACTQ,QAAQC,IAAIV,EACb,IACAW,SAAQ,kBAAMR,GAAW,EAAjB,GAGd,GAAE,KAID,gCAEKD,GAAW,cAEXF,IAAS,yBAAMA,IACfX,IAAU,SAAC,EAAD,CAAWA,OAAQA,MAGrC,C","sources":["components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  // const location = useLocation();\n  // console.log(location.pathname);\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n              {/* <Link to={`/movies/${id}`} state={{ from: location.pathname }}> */}\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  // prevLocation: PropTypes.object.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;","import { useEffect, useState } from 'react';\nimport { getMovies } from 'components/api';\nimport MovieList from 'components/MoviesList/MoviesList';\n\nexport default function HomePage() {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n  \n    useEffect(() => {\n      const fetchTrendingMovies = () => {\n        setLoading(true);\n        getMovies()\n          .then(results => {\n            setMovies(results);\n          })\n          .catch(error => {\n            setError('Ooops. Something went wrong...');\n            console.log(error);\n          })\n          .finally(() => setLoading(false));\n      };\n      fetchTrendingMovies();\n    }, []);\n  \n    // const isNotFound = !loading && !movies.length;\n    return (\n      <>\n          {/* <SearchBar onSubmit={handleFormSubmit} /> */}\n          {loading && 'Loading ...'}\n          {/* {isNotFound && <NotFoundView />} */}\n          {error && <div>{error}</div>}\n          {movies && <MovieList movies={movies} />}\n      </>\n    );\n  }\n  "],"names":["movies","prevLocation","map","id","original_title","to","state","from","HomePage","useState","setMovies","error","setError","loading","setLoading","useEffect","getMovies","then","results","catch","console","log","finally"],"sourceRoot":""}