{"version":3,"file":"static/js/906.5572f2ff.chunk.js","mappings":"sLA4BA,IArBkB,SAAC,GAAgC,IAA9BA,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC9BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWL,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OAC1B,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMR,GAAYS,GAAE,kBAAaL,GAAhD,SACGC,GAASC,KAFLF,EADiB,IAO5B,OACE,+BACE,4BACA,wBAAKF,IACJJ,IAAW,SAAC,IAAD,IACXC,IAAS,+BAAK,SAAC,IAAD,CAAcW,QAAQ,qDAI1C,C,4HCzBD,EAAyB,2BAAzB,EAAiE,+BAAjE,EAA8G,gCAA9G,EAA6J,iC,4CC6E7J,EArEmB,WACjB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOb,EAAP,KAAgBgB,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOZ,EAAP,KAAcgB,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAemB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KAeMC,EAAYF,EAAaG,IAAI,SAmBnC,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBT,GAAW,GADM,mBAGIU,EAAAA,EAAAA,IAAaJ,GAHjB,OAGTK,EAHS,OAIfT,EAAUS,GAJK,gDAMfV,EAAS,kCANM,yBAQfD,GAAW,GARI,4EAAH,qDAWZM,GACFG,GAEH,GAAE,CAACH,KAGF,gCACGtB,IAAW,SAAC4B,EAAA,EAAD,IACX3B,IACC,yBACE,SAAC4B,EAAA,EAAD,CAAcjB,QAAQ,iDAG1B,gBAAKkB,UAAWC,EAAhB,UACE,kBAAMC,SArCS,SAAAC,GACnBA,EAAEC,iBACoB,KAAlBpB,EAAOqB,QACTC,MAAM,wBAERf,EAAgB,CAAEP,OAAAA,IAClBC,EAAU,GACX,EA8BmCe,UAAWC,EAAzC,WACE,kBACEM,KAAK,OACL7B,KAAK,cACL8B,MAAOxB,EACPyB,aAAa,MACbC,WAAS,EACTC,YAAY,aACZC,SAjDgB,SAAAT,GACxBlB,EAAUkB,EAAEU,OAAOL,MAAMM,cAC1B,EAgDSd,UAAWC,KAEb,mBAAQM,KAAK,SAASP,UAAWC,EAAjC,yBAKHhC,EAAO8C,OAAS,IAAK,SAAC,IAAD,CAAW9C,OAAQA,MAG9C,C","sources":["components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Notification from 'components/Notification/Notification';\nimport Loader from 'components/Loader/Loader';\n\n\nconst MovieList = ({ movies, loading, error }) => {\n  const location = useLocation()\n\n  const elements = movies.map(({ id, title, name }) => (\n    <li key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        {title || name}\n      </Link>\n    </li>\n  ));\n  return (\n    <>\n      <div>\n      <ul>{elements}</ul>\n      {loading && <Loader />}\n      {error && <h2> <Notification message=\"Oooooops. Sorry, but something went wrong\" /></h2>}\n    </div>\n    </>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"MoviesPage_search__00AR5\",\"searchForm\":\"MoviesPage_searchForm__oPV05\",\"searchInput\":\"MoviesPage_searchInput__mD1a6\",\"searchButton\":\"MoviesPage_searchButton__q88Ko\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport css from './MoviesPage.module.css';\nimport { fetchByQuery } from 'components/api';\nimport MovieList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport Notification from 'components/Notification/Notification';\n\nconst MoviesPage = () => {\n  const [search, setSearch] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n\n  const handleQuerySearch = e => {\n    setSearch(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (search.trim() === '') {\n      alert('Enter the film title');\n    }\n    setSearchParams({ search });\n    setSearch('');\n  };\n\n  const movieName = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setLoading(true);\n      try {\n        const data = await fetchByQuery(movieName);\n        setMovies(data);\n      } catch (error) {\n        setError('Ooops. Something went wrong...');\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (movieName) {\n      fetchMovie();\n    }\n  }, [movieName]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && (\n        <h2>\n          <Notification message=\"Oooooops. Sorry, but something went wrong\" />\n        </h2>\n      )}\n      <div className={css.search}>\n        <form onSubmit={handleSubmit} className={css.searchForm}>\n          <input\n            type=\"text\"\n            name=\"searchQuery\"\n            value={search}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search ...\"\n            onChange={handleQuerySearch}\n            className={css.searchInput}\n          />\n          <button type=\"submit\" className={css.searchButton}>\n            Search\n          </button>\n        </form>\n      </div>\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["movies","loading","error","location","useLocation","elements","map","id","title","name","state","from","to","message","useState","search","setSearch","setLoading","setError","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","fetchMovie","fetchByQuery","data","Loader","Notification","className","css","onSubmit","e","preventDefault","trim","alert","type","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","length"],"sourceRoot":""}