{"version":3,"file":"static/js/247.40f621bc.chunk.js","mappings":"2OAyDA,UAnDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdF,GAAW,GAFG,UAGIG,EAAAA,EAAAA,IAAmBX,GAHvB,OAGRY,EAHQ,OAIdR,EAAQQ,GAJM,gDAMdN,EAAS,kCANK,yBAQdE,GAAW,GARG,4EAAH,qDAWfE,GACD,GAAE,CAACV,KAGF,gCACGO,IAAW,SAAC,IAAD,IACXF,IACC,yBACE,SAAC,IAAD,CAAcQ,QAAQ,iDAG1B,wBACGV,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,QAAlC,OACR,2BACE,gBACEC,MAAM,MACNC,IACEL,EAAY,yCAC0BA,GAClC,kHAENM,IAAKL,KAEP,uBAAIA,KACJ,uCAAeC,OAXRC,EADD,QAkBjB,C,mECtDD,EAAyB,uB,SCiBzB,EAde,WACb,OACE,gBAAKI,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,MAClBP,MAAM,KACNQ,SAAS,KAIhB,C,mCCRD,IANqB,SAAC,GAAD,IAAGd,EAAH,EAAGA,QAAH,OACnB,yBACGA,GAFgB,C,+LCAfe,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,oGACLF,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,wCADK,cACjBhB,EADiB,yBAIhBA,EAAIoB,KAAKC,SAJO,2CAAH,qDAOTC,EAAY,mCAAG,WAAOC,GAAP,uFACRN,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,kBACsCO,EADtC,oBADQ,cACpBvB,EADoB,yBAKnBA,EAAIoB,KAAKC,SALU,2CAAH,sDAQZG,EAAkB,mCAAG,WAAMC,GAAN,uFACdR,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcO,EADd,oBAC4BT,EAD5B,oBADc,cAC1BhB,EAD0B,yBAKzBA,EAAIoB,MALqB,2CAAH,sDAQlBrB,EAAkB,mCAAG,WAAM0B,GAAN,uFACdR,EAAAA,EAAAA,IAAA,iBACNQ,GADM,OACDP,EADC,oBACkCF,EADlC,oBADc,cAC1BhB,EAD0B,yBAKzBA,EAAIoB,KAAK7B,MALgB,2CAAH,sDAQlBmC,EAAkB,mCAAG,WAAOD,GAAP,uFACdR,EAAAA,EAAAA,IAAA,iBACNQ,GADM,OACDP,EADC,oBACkCF,EADlC,oBADc,cAC1BhB,EAD0B,yBAKzBA,EAAIoB,KAAKC,SALgB,2CAAH,qD","sources":["components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/Notification/Notification.jsx","components/api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesCredits } from 'components/api';\nimport Loader from 'components/Loader/Loader';\nimport Notification from 'components/Notification/Notification';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const res = await fetchMoviesCredits(movieId);\n        setCast(res);\n      } catch (error) {\n        setError('Ooops. Something went wrong...');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && (\n        <h2>\n          <Notification message=\"Oooooops. Sorry, but something went wrong\" />\n        </h2>\n      )}\n      <ul>\n        {cast.map(({ profile_path, name, character, cast_id }) => (\n          <li key={cast_id}>\n            <img\n              width=\"300\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                  : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n              }\n              alt={name}\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { RotatingLines } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <RotatingLines\n        strokeColor=\"blue\"\n        strokeWidth=\"5\"\n        animationDuration=\"1.5\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => (\n  <div>\n    {message}\n  </div>\n);\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};","import axios from 'axios';\n\nconst API_KEY = 'a3edefb60f7eeaec507fd07582e0d71e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async () => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&query=${query}&language=en-US`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.results;\n};\n"],"names":["movieId","useParams","useState","cast","setCast","error","setError","loading","setLoading","useEffect","fetchCast","fetchMoviesCredits","res","message","map","profile_path","name","character","cast_id","width","src","alt","className","css","strokeColor","strokeWidth","animationDuration","visible","API_KEY","axios","END_POINTS","getMovies","data","results","fetchByQuery","query","fetchMoviesDetails","id","fetchMoviesReviews"],"sourceRoot":""}