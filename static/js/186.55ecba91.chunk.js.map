{"version":3,"file":"static/js/186.55ecba91.chunk.js","mappings":"mJAQA,IANqB,SAAC,GAAD,IAAGA,EAAH,EAAGA,QAAH,OACnB,yBACGA,GAFgB,C,kHC2CrB,UAvCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAECC,EAAAA,EAAAA,IAAmBT,GAFpB,OAEXU,EAFW,OAGjBN,EAAWM,GAHM,gDAKjBJ,EAAS,EAAD,IALS,yDAAH,qDAQlBE,GACD,GAAE,CAACR,KAGF,gCACGK,IACC,yBACE,SAAC,IAAD,CAAcN,QAAQ,iDAG1B,wBACGI,EAAQQ,KAAI,SAAAC,GACX,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,QAIR,C,+LCzCKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,oGACLF,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,wCADK,cACjBN,EADiB,yBAIhBA,EAAIU,KAAKC,SAJO,2CAAH,qDAOTC,EAAY,mCAAG,WAAOC,GAAP,uFACRN,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,kBACsCO,EADtC,oBADQ,cACpBb,EADoB,yBAKnBA,EAAIU,KAAKC,SALU,2CAAH,sDAQZG,EAAkB,mCAAG,WAAMT,GAAN,uFACdE,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcH,EADd,oBAC4BC,EAD5B,oBADc,cAC1BN,EAD0B,yBAKzBA,EAAIU,MALqB,2CAAH,sDAQlBK,EAAkB,mCAAG,WAAMV,GAAN,uFACdE,EAAAA,EAAAA,IAAA,iBACNF,GADM,OACDG,EADC,oBACkCF,EADlC,oBADc,cAC1BN,EAD0B,yBAKzBA,EAAIU,KAAKM,MALgB,2CAAH,sDAQlBjB,EAAkB,mCAAG,WAAOM,GAAP,uFACdE,EAAAA,EAAAA,IAAA,iBACNF,GADM,OACDG,EADC,oBACkCF,EADlC,oBADc,cAC1BN,EAD0B,yBAKzBA,EAAIU,KAAKC,SALgB,2CAAH,qD","sources":["components/Notification/Notification.jsx","components/Reviews/Reviews.jsx","components/api.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => (\n  <div>\n    {message}\n  </div>\n);\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'components/api';\n\nimport Notification from 'components/Notification/Notification';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const res = await fetchMoviesReviews(movieId);\n        setReviews(res);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && (\n        <h2>\n          <Notification message=\"Oooooops. Sorry, but something went wrong\" />\n        </h2>\n      )}\n      <ul>\n        {reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'a3edefb60f7eeaec507fd07582e0d71e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async () => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&query=${query}&language=en-US`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.results;\n};\n"],"names":["message","movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","fetchMoviesReviews","res","map","review","author","content","id","API_KEY","axios","END_POINTS","getMovies","data","results","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast"],"sourceRoot":""}