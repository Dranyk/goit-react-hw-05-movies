{"version":3,"file":"static/js/680.e9eaf9a2.chunk.js","mappings":"oKA8BA,IA1BkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,UACE,wBAAKI,GAASC,OAFTF,EADC,OAUnB,C,8ICfc,SAASM,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,2FAC1BF,GAAW,GADe,mBAGLG,EAAAA,EAAAA,MAHK,OAGlBC,EAHkB,OAIxBR,EAAUQ,GAJc,gDAOtBN,EAAS,kCAPa,yBASjBE,GAAW,GATM,oFAAH,qDAWzBE,GACD,GAAE,KAGD,gCACKH,GAAW,cACXF,IAAS,0CACTb,IAAU,SAAC,IAAD,CAAWA,OAAQA,MAGrC,C","sources":["components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation()\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title, name }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <h3>{title || name}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  // prevLocation: PropTypes.object.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;","import { useEffect, useState } from 'react';\nimport { getMovies } from 'components/api';\nimport MovieList from 'components/MoviesList/MoviesList';\n\nexport default function HomePage() {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n  \n    useEffect(() => {\n      const fetchTrendingMovies = async () => {\n        setLoading(true);\n        try {\n          const data = await getMovies()\n          setMovies(data);\n        }\n          catch(error) {\n            setError('Ooops. Something went wrong...');\n          }\n        finally {setLoading(false)};\n      };\n      fetchTrendingMovies();\n    }, []);\n  \n    return (\n      <>\n          {loading && 'Loading ...'}\n          {error && <h2>Oooops. Sorry</h2>}\n          {movies && <MovieList movies={movies} />}\n      </>\n    );\n  }\n  "],"names":["movies","location","useLocation","map","id","title","name","to","state","from","HomePage","useState","setMovies","error","setError","loading","setLoading","useEffect","fetchTrendingMovies","getMovies","data"],"sourceRoot":""}