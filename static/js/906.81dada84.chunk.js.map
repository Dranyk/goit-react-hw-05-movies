{"version":3,"file":"static/js/906.81dada84.chunk.js","mappings":"mLACA,EAAyB,uB,SCiBzB,EAde,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,MAClBC,MAAM,KACNC,SAAS,KAIhB,C,oDCcD,IA1BkB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,UACE,wBAAKI,GAASC,OAFTF,EADC,OAUnB,C,4HClBD,EAAyB,2BAAzB,EAAiE,+BAAjE,EAA8G,gCAA9G,EAA6J,iC,mCCwE7J,EAjEmB,WACjB,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeiB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KAeMC,EAAYF,EAAaG,IAAI,SAmBnC,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBV,GAAW,GADM,mBAGIW,EAAAA,EAAAA,IAAaJ,GAHjB,OAGTK,EAHS,OAIfT,EAAUS,GAJK,gDAMfV,EAAS,kCANM,yBAQfF,GAAW,GARI,4EAAH,qDAWZO,GACFG,GAEH,GAAE,CAACH,KAGF,iCACE,gBAAK5B,UAAWC,EAAhB,UACE,kBAAMiC,SA/BS,SAAAC,GACnBA,EAAEC,iBACoB,KAAlBlB,EAAOmB,QACTC,MAAM,wBAERX,EAAgB,CAAET,OAAAA,IAClBC,EAAU,GACX,EAwBmCnB,UAAWC,EAAzC,WACE,kBACEsC,KAAK,OACL1B,KAAK,cACL2B,MAAOtB,EACPuB,aAAa,MACbC,WAAS,EACTC,YAAY,aACZC,SA3CgB,SAAAT,GACxBhB,EAAUgB,EAAEU,OAAOL,MAAMM,cAC1B,EA0CS9C,UAAWC,KAEb,mBAAQsC,KAAK,SAASvC,UAAWC,EAAjC,yBAKHmB,IAAW,SAAC2B,EAAA,EAAD,IACXzB,IAAS,yBAAMA,IACff,EAAOyC,OAAS,IAAK,SAAC,IAAD,CAAWzC,OAAQA,MAG9C,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { RotatingLines } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <RotatingLines\n        strokeColor=\"blue\"\n        strokeWidth=\"5\"\n        animationDuration=\"1.5\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation()\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title, name }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <h3>{title || name}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  // prevLocation: PropTypes.object.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"MoviesPage_search__00AR5\",\"searchForm\":\"MoviesPage_searchForm__oPV05\",\"searchInput\":\"MoviesPage_searchInput__mD1a6\",\"searchButton\":\"MoviesPage_searchButton__q88Ko\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport css from './MoviesPage.module.css';\nimport { fetchByQuery } from 'components/api';\nimport MovieList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\n\nconst MoviesPage = () => {\n  const [search, setSearch] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n\n  const handleQuerySearch = e => {\n    setSearch(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (search.trim() === '') {\n      alert('Enter the film title');\n    }\n    setSearchParams({ search });\n    setSearch('');\n  };\n\n  const movieName = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setLoading(true);\n      try {\n        const data = await fetchByQuery(movieName);\n        setMovies(data);\n      } catch (error) {\n        setError('Ooops. Something went wrong...');\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (movieName) {\n      fetchMovie();\n    }\n  }, [movieName]);\n\n  return (\n    <>\n      <div className={css.search}>\n        <form onSubmit={handleSubmit} className={css.searchForm}>\n          <input\n            type=\"text\"\n            name=\"searchQuery\"\n            value={search}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search ...\"\n            onChange={handleQuerySearch}\n            className={css.searchInput}\n          />\n          <button type=\"submit\" className={css.searchButton}>\n            Search\n          </button>\n        </form>\n      </div>\n      {loading && <Loader />}\n      {error && <div>{error}</div>}\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["className","css","strokeColor","strokeWidth","animationDuration","width","visible","movies","location","useLocation","map","id","title","name","to","state","from","useState","search","setSearch","loading","setLoading","error","setError","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","fetchMovie","fetchByQuery","data","onSubmit","e","preventDefault","trim","alert","type","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","Loader","length"],"sourceRoot":""}